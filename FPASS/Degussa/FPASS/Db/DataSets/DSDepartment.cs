//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Degussa.FPASS.Db.DataSets {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DSDepartment : DataSet {
        
        private FPASS_DEPARTMENTDataTable tableFPASS_DEPARTMENT;
        
        public DSDepartment() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DSDepartment(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["FPASS_DEPARTMENT"] != null)) {
                    this.Tables.Add(new FPASS_DEPARTMENTDataTable(ds.Tables["FPASS_DEPARTMENT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FPASS_DEPARTMENTDataTable FPASS_DEPARTMENT {
            get {
                return this.tableFPASS_DEPARTMENT;
            }
        }
        
        public override DataSet Clone() {
            DSDepartment cln = ((DSDepartment)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["FPASS_DEPARTMENT"] != null)) {
                this.Tables.Add(new FPASS_DEPARTMENTDataTable(ds.Tables["FPASS_DEPARTMENT"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableFPASS_DEPARTMENT = ((FPASS_DEPARTMENTDataTable)(this.Tables["FPASS_DEPARTMENT"]));
            if ((this.tableFPASS_DEPARTMENT != null)) {
                this.tableFPASS_DEPARTMENT.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DSDepartment";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DSDepartment.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableFPASS_DEPARTMENT = new FPASS_DEPARTMENTDataTable();
            this.Tables.Add(this.tableFPASS_DEPARTMENT);
        }
        
        private bool ShouldSerializeFPASS_DEPARTMENT() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void FPASS_DEPARTMENTRowChangeEventHandler(object sender, FPASS_DEPARTMENTRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class FPASS_DEPARTMENTDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnDEPT_CHANGEUSER;
            
            private DataColumn columnDEPT_TIMESTAMP;
            
            private DataColumn columnDEPT_ID;
            
            private DataColumn columnDEPT_MND_ID;
            
            private DataColumn columnDEPT_DEPARTMENT;
            
            internal FPASS_DEPARTMENTDataTable() : 
                    base("FPASS_DEPARTMENT") {
                this.InitClass();
            }
            
            internal FPASS_DEPARTMENTDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn DEPT_CHANGEUSERColumn {
                get {
                    return this.columnDEPT_CHANGEUSER;
                }
            }
            
            internal DataColumn DEPT_TIMESTAMPColumn {
                get {
                    return this.columnDEPT_TIMESTAMP;
                }
            }
            
            internal DataColumn DEPT_IDColumn {
                get {
                    return this.columnDEPT_ID;
                }
            }
            
            internal DataColumn DEPT_MND_IDColumn {
                get {
                    return this.columnDEPT_MND_ID;
                }
            }
            
            internal DataColumn DEPT_DEPARTMENTColumn {
                get {
                    return this.columnDEPT_DEPARTMENT;
                }
            }
            
            public FPASS_DEPARTMENTRow this[int index] {
                get {
                    return ((FPASS_DEPARTMENTRow)(this.Rows[index]));
                }
            }
            
            public event FPASS_DEPARTMENTRowChangeEventHandler FPASS_DEPARTMENTRowChanged;
            
            public event FPASS_DEPARTMENTRowChangeEventHandler FPASS_DEPARTMENTRowChanging;
            
            public event FPASS_DEPARTMENTRowChangeEventHandler FPASS_DEPARTMENTRowDeleted;
            
            public event FPASS_DEPARTMENTRowChangeEventHandler FPASS_DEPARTMENTRowDeleting;
            
            public void AddFPASS_DEPARTMENTRow(FPASS_DEPARTMENTRow row) {
                this.Rows.Add(row);
            }
            
            public FPASS_DEPARTMENTRow AddFPASS_DEPARTMENTRow(System.Decimal DEPT_CHANGEUSER, System.DateTime DEPT_TIMESTAMP, System.Decimal DEPT_ID, System.Decimal DEPT_MND_ID, string DEPT_DEPARTMENT) {
                FPASS_DEPARTMENTRow rowFPASS_DEPARTMENTRow = ((FPASS_DEPARTMENTRow)(this.NewRow()));
                rowFPASS_DEPARTMENTRow.ItemArray = new object[] {
                        DEPT_CHANGEUSER,
                        DEPT_TIMESTAMP,
                        DEPT_ID,
                        DEPT_MND_ID,
                        DEPT_DEPARTMENT};
                this.Rows.Add(rowFPASS_DEPARTMENTRow);
                return rowFPASS_DEPARTMENTRow;
            }
            
            public FPASS_DEPARTMENTRow FindByDEPT_ID(System.Decimal DEPT_ID) {
                return ((FPASS_DEPARTMENTRow)(this.Rows.Find(new object[] {
                            DEPT_ID})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                FPASS_DEPARTMENTDataTable cln = ((FPASS_DEPARTMENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new FPASS_DEPARTMENTDataTable();
            }
            
            internal void InitVars() {
                this.columnDEPT_CHANGEUSER = this.Columns["DEPT_CHANGEUSER"];
                this.columnDEPT_TIMESTAMP = this.Columns["DEPT_TIMESTAMP"];
                this.columnDEPT_ID = this.Columns["DEPT_ID"];
                this.columnDEPT_MND_ID = this.Columns["DEPT_MND_ID"];
                this.columnDEPT_DEPARTMENT = this.Columns["DEPT_DEPARTMENT"];
            }
            
            private void InitClass() {
                this.columnDEPT_CHANGEUSER = new DataColumn("DEPT_CHANGEUSER", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDEPT_CHANGEUSER);
                this.columnDEPT_TIMESTAMP = new DataColumn("DEPT_TIMESTAMP", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDEPT_TIMESTAMP);
                this.columnDEPT_ID = new DataColumn("DEPT_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDEPT_ID);
                this.columnDEPT_MND_ID = new DataColumn("DEPT_MND_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDEPT_MND_ID);
                this.columnDEPT_DEPARTMENT = new DataColumn("DEPT_DEPARTMENT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDEPT_DEPARTMENT);
                this.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] {
                                this.columnDEPT_ID}, true));
                this.columnDEPT_CHANGEUSER.AllowDBNull = false;
                this.columnDEPT_TIMESTAMP.AllowDBNull = false;
                this.columnDEPT_ID.AllowDBNull = false;
                this.columnDEPT_ID.Unique = true;
                this.columnDEPT_MND_ID.AllowDBNull = false;
                this.columnDEPT_DEPARTMENT.AllowDBNull = false;
            }
            
            public FPASS_DEPARTMENTRow NewFPASS_DEPARTMENTRow() {
                return ((FPASS_DEPARTMENTRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new FPASS_DEPARTMENTRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(FPASS_DEPARTMENTRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FPASS_DEPARTMENTRowChanged != null)) {
                    this.FPASS_DEPARTMENTRowChanged(this, new FPASS_DEPARTMENTRowChangeEvent(((FPASS_DEPARTMENTRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FPASS_DEPARTMENTRowChanging != null)) {
                    this.FPASS_DEPARTMENTRowChanging(this, new FPASS_DEPARTMENTRowChangeEvent(((FPASS_DEPARTMENTRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FPASS_DEPARTMENTRowDeleted != null)) {
                    this.FPASS_DEPARTMENTRowDeleted(this, new FPASS_DEPARTMENTRowChangeEvent(((FPASS_DEPARTMENTRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FPASS_DEPARTMENTRowDeleting != null)) {
                    this.FPASS_DEPARTMENTRowDeleting(this, new FPASS_DEPARTMENTRowChangeEvent(((FPASS_DEPARTMENTRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveFPASS_DEPARTMENTRow(FPASS_DEPARTMENTRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class FPASS_DEPARTMENTRow : DataRow {
            
            private FPASS_DEPARTMENTDataTable tableFPASS_DEPARTMENT;
            
            internal FPASS_DEPARTMENTRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableFPASS_DEPARTMENT = ((FPASS_DEPARTMENTDataTable)(this.Table));
            }
            
            public System.Decimal DEPT_CHANGEUSER {
                get {
                    return ((System.Decimal)(this[this.tableFPASS_DEPARTMENT.DEPT_CHANGEUSERColumn]));
                }
                set {
                    this[this.tableFPASS_DEPARTMENT.DEPT_CHANGEUSERColumn] = value;
                }
            }
            
            public System.DateTime DEPT_TIMESTAMP {
                get {
                    return ((System.DateTime)(this[this.tableFPASS_DEPARTMENT.DEPT_TIMESTAMPColumn]));
                }
                set {
                    this[this.tableFPASS_DEPARTMENT.DEPT_TIMESTAMPColumn] = value;
                }
            }
            
            public System.Decimal DEPT_ID {
                get {
                    return ((System.Decimal)(this[this.tableFPASS_DEPARTMENT.DEPT_IDColumn]));
                }
                set {
                    this[this.tableFPASS_DEPARTMENT.DEPT_IDColumn] = value;
                }
            }
            
            public System.Decimal DEPT_MND_ID {
                get {
                    return ((System.Decimal)(this[this.tableFPASS_DEPARTMENT.DEPT_MND_IDColumn]));
                }
                set {
                    this[this.tableFPASS_DEPARTMENT.DEPT_MND_IDColumn] = value;
                }
            }
            
            public string DEPT_DEPARTMENT {
                get {
                    return ((string)(this[this.tableFPASS_DEPARTMENT.DEPT_DEPARTMENTColumn]));
                }
                set {
                    this[this.tableFPASS_DEPARTMENT.DEPT_DEPARTMENTColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class FPASS_DEPARTMENTRowChangeEvent : EventArgs {
            
            private FPASS_DEPARTMENTRow eventRow;
            
            private DataRowAction eventAction;
            
            public FPASS_DEPARTMENTRowChangeEvent(FPASS_DEPARTMENTRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public FPASS_DEPARTMENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
